use crate::solutions::s0016_3sum_closest::three_sum_closest;
mod solutions;

// 833,736,953,-584,-448,207,128,-445,126,248,871,860,333,-899,463,488,-50,-331,903,575,265,162,-733,648,678,549,579,-172,-897,562,-503,-508,858,259,-347,-162,-505,-694,300,-40,-147,383,-221,-28,-699,36,-229,960,317,-585,879,406,2,409,-393,-934,67,71,-312,787,161,514,865,60,555,843,-725,-966,-352,862,821,803,-835,-635,476,-704,-78,393,212,767,-833,543,923,-993,274,-839,389,447,741,999,-87,599,-349,-515,-553,-14,-421,-294,-204,-713,497,168,337,-345,-948,145,625,901,34,-306,-546,-536,332,-467,-729,229,-170,-915,407,450,159,-385,163,-420,58,869,308,-494,367,-33,205,-823,-869,478,-238,-375,352,113,-741,-970,-990,802,-173,-977,464,-801,-408,-77,694,-58,-796,-599,-918,643,-651,-555,864,-274,534,211,-910,815,-102,24,-461,-146
// -993, -990, -977, -970, -966, -948, -934, -918, -915, -910, -899, -897, -869, -839, -835, -833, -823, -801, -796, -741, -733, -729, -725, -713, -704, -699, -694, -651, -635, -599, -585, -584, -555, -553, -546, -536, -515, -508, -505, -503, -494, -467, -461, -448, -445, -421, -420, -408, -393, -385, -375, -352, -349, -347, -345, -331, -312, -306, -294, -274, -238, -229, -221, -204, -173, -172, -170, -162, -147, -146, -102, -87, -78, -77, -58, -50, -40, -33, -28, -14, 2, 24, 34, 36, 58, 60, 67, 71, 113, 126, 128, 145, 159, 161, 162, 163, 168, 205, 207, 211, 212, 229, 248, 259, 265, 274, 300, 308, 317, 332, 333, 337, 352, 367, 383, 389, 393, 406, 407, 409, 447, 450, 463, 464, 476, 478, 488, 497, 514, 534, 543, 549, 555, 562, 575, 579, 599, 625, 643, 648, 678, 694, 736, 741, 767, 787, 802, 803, 815, 821, 833, 843, 858, 860, 862, 864, 865, 869, 871, 879, 901, 903, 923, 953, 960, 999
fn main() {
    let rv = three_sum_closest(vec![-993, -990, -977, -970, -966, -948]
                               , -7111);
    println!("Result {:?}", rv)
}